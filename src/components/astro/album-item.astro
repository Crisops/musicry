---
import type { Tables } from '@/types/database.types'
import { Image } from 'astro:assets'
import Link from '@/components/astro/link.astro'
import type { HTMLAttributes } from 'astro/types'

type AlbumItem = {
  link: HTMLAttributes<'a'>['class']
  imageWrapper: HTMLAttributes<'div'>['class']
  image: HTMLAttributes<'img'>['class']
  title: HTMLAttributes<'h4'>['class']
  artist: HTMLAttributes<'p'>['class']
}

type ImageConfig = {
  width: number
  height: number
}

interface Props {
  id: Tables<'albums'>['id']
  title: Tables<'albums'>['title']
  artist: Tables<'albums'>['artist']
  image_url: Tables<'albums'>['image_url']
  classNames?: Partial<AlbumItem>
  imageConfig?: ImageConfig
}

const { id, title, artist, image_url: imageUrl, classNames, imageConfig } = Astro.props
---

<li class="hover:bg-rich-dark-jungle/30 transition-background flex-grow">
  <Link href={`/album/${id}`} class={classNames?.link}>
    <div class:list={['relative aspect-square h-auto w-11', classNames?.imageWrapper]}>
      {
        imageUrl && (
          <Image
            class:list={['absolute h-full w-full rounded-md object-cover', classNames?.image]}
            src={imageUrl}
            alt={title}
            width={imageConfig?.width ?? 44}
            height={imageConfig?.height ?? 44}
          />
        )
      }
    </div>
    <div class="flex-initial flex-col items-start justify-center">
      <h4 class:list={['text-sealsalt text-small font-semibold', classNames?.title]}>
        {title}
      </h4>
      <p class:list={['text-gray-dim max-w-28 truncate text-xs', classNames?.artist]}>
        {artist}
      </p>
    </div>
  </Link>
</li>
