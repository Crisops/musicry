---
import Layout from '@/layouts/Layout.astro'
import { getAlbumById } from '@/lib/supabase/resources/albums'
import AlbumDetail from '@/components/astro/album-detail.astro'
import AlbumDetailMovile from '@/components/astro/album-detail-movile.astro'
import ButtonPlay from '@/components/react/button-play'
import TrackListAlbum from '@/components/react/track-list-abum'

const { id } = Astro.params
const { request, cookies } = Astro

if (!id) return

const album = await getAlbumById(request, cookies, id)
---

<Layout>
  <section class="relative flex h-full w-full flex-col">
    <div id="gradient-bg" class="absolute h-80 w-full sm:h-full"></div>
    <AlbumDetail album={album} />
    <div class="flex items-center justify-between px-3 py-5 sm:justify-start">
      {album && <AlbumDetailMovile imageUrl={album.image_url} title={album.title} artist={album.artist} />}
      <ButtonPlay
        client:load
        id={id}
        radius="full"
        sizeIcon={22}
        className="h-12 w-12 min-w-12 sm:size-14"
        source="made-for-you"
      />
    </div>
    <TrackListAlbum client:visible songs={album?.songs ?? []} />
  </section>
</Layout>

<script>
  import { extractDominantColor } from '@/utils/color-extractor'
  import { IGNORED_COLORS_ALBUM } from '@/config/ignored-colors'

  const getColorImage = async () => {
    const image = document.getElementById('album-image') as HTMLImageElement | null
    const gradient = document.getElementById('gradient-bg') as HTMLElement | null

    if (!image || !gradient) return

    try {
      const applyColor = async () => {
        const color = await extractDominantColor(image, {
          algorithm: 'sqrt',
          ignoredColor: IGNORED_COLORS_ALBUM,
        })
        if (color) {
          const { hex } = color
          gradient.style.background = `linear-gradient(to top, #0a0d11, ${hex})`
        }
      }

      if (image.complete && image.naturalWidth > 0) {
        await applyColor()
      } else {
        image.addEventListener('load', applyColor, { once: true })
      }
    } catch (error) {
      console.log('Error extracting color:', error)
      gradient.style.background = 'linear-gradient(to top, #e01707, transparent)'
    }
  }

  document.addEventListener('astro:after-swap', getColorImage)
  document.addEventListener('astro:page-load', getColorImage)
</script>
